// Code generated by MockGen. DO NOT EDIT.
// Source: internal/repositories/aircraft.repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	domain "airline-voucher-seat-be/internal/models/domain"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAircraftRepositoryInterface is a mock of AircraftRepositoryInterface interface.
type MockAircraftRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAircraftRepositoryInterfaceMockRecorder
}

// MockAircraftRepositoryInterfaceMockRecorder is the mock recorder for MockAircraftRepositoryInterface.
type MockAircraftRepositoryInterfaceMockRecorder struct {
	mock *MockAircraftRepositoryInterface
}

// NewMockAircraftRepositoryInterface creates a new mock instance.
func NewMockAircraftRepositoryInterface(ctrl *gomock.Controller) *MockAircraftRepositoryInterface {
	mock := &MockAircraftRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockAircraftRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAircraftRepositoryInterface) EXPECT() *MockAircraftRepositoryInterfaceMockRecorder {
	return m.recorder
}

// GetAircraftTypes mocks base method.
func (m *MockAircraftRepositoryInterface) GetAircraftTypes(ctx context.Context) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAircraftTypes", ctx)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAircraftTypes indicates an expected call of GetAircraftTypes.
func (mr *MockAircraftRepositoryInterfaceMockRecorder) GetAircraftTypes(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAircraftTypes", reflect.TypeOf((*MockAircraftRepositoryInterface)(nil).GetAircraftTypes), ctx)
}

// GetSeatLayoutByAircraft mocks base method.
func (m *MockAircraftRepositoryInterface) GetSeatLayoutByAircraft(ctx context.Context, aircraftType string) (domain.SeatLayout, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSeatLayoutByAircraft", ctx, aircraftType)
	ret0, _ := ret[0].(domain.SeatLayout)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSeatLayoutByAircraft indicates an expected call of GetSeatLayoutByAircraft.
func (mr *MockAircraftRepositoryInterfaceMockRecorder) GetSeatLayoutByAircraft(ctx, aircraftType interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSeatLayoutByAircraft", reflect.TypeOf((*MockAircraftRepositoryInterface)(nil).GetSeatLayoutByAircraft), ctx, aircraftType)
}
